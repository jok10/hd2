"use strict";

var canvas;
var gl;

var points = [];

var NumTimesToSubdivide = 5;

window.onload = function init()
{
    canvas = document.getElementById("gl-canvas");

    gl = WebGLUtils.setupWebGL(canvas);
    if (!gl) { alert("WebGL isn't available"); }

    var vertices = [
    vec2(-1, -1), 
    vec2( 1, -1), 
    vec2( 1,  1), 
    vec2(-1,  1)  
];

    divideSquare(vertices[0], vertices[1], vertices[2], vertices[3],
                 NumTimesToSubdivide);

    gl.viewport(0, 0, canvas.width, canvas.height);
    gl.clearColor(1.0, 1.0, 1.0, 1.0);

    var program = initShaders(gl, "vertex-shader", "fragment-shader");
    gl.useProgram(program);

    var bufferId = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, bufferId);
    gl.bufferData(gl.ARRAY_BUFFER, flatten(points), gl.STATIC_DRAW);

    var vPosition = gl.getAttribLocation(program, "vPosition");
    gl.vertexAttribPointer(vPosition, 2, gl.FLOAT, false, 0, 0);
    gl.enableVertexAttribArray(vPosition);

    render();
};

function square(a, b, c, d)
{
    points.push(a, b, c);
    points.push(a, c, d);
}

function divideSquare(a, b, c, d, count)
{
    if (count === 0) { square(a, b, c, d); return; }

    //bý til 8 punkta milli horna fernings
    var ab1 = mix(a, b, 1/3);
    var ab2 = mix(a, b, 2/3);
    //hér sem dæmi er punkturinn bc1 þriðjung af lengdinni milli punkta b og c
    var bc1 = mix(b, c, 1/3);
    var bc2 = mix(b, c, 2/3);
    var cd1 = mix(c, d, 1/3);
    var cd2 = mix(c, d, 2/3);
    var da1 = mix(d, a, 1/3);
    var da2 = mix(d, a, 2/3);

    //finna 4 punkta miðju fernings
    var m11 = mix(da2, bc1, 1/3);
    var m12 = mix(da2, bc1, 2/3);
    var m21 = mix(da1, bc2, 1/3);
    var m22 = mix(da1, bc2, 2/3);

    --count;
    //ferningur niður til vinstri:
    divideSquare(a,    ab1,  m11,  da2,  count);
    //ferningur í miðju neðst:
    divideSquare(ab1,  ab2,  m12,  m11,  count);

    divideSquare(ab2,  b,    bc1,  m12,  count);
    divideSquare(da2,  m11,  m21,  da1,  count);
    divideSquare(m12,  bc1,  bc2,  m22,  count);
    divideSquare(da1,  m21,  cd2,  d,    count);
    divideSquare(m21,  m22,  cd1,  cd2,  count);
    divideSquare(m22,  bc2,  c,    cd1,  count);
}


function render()
{
    gl.clear(gl.COLOR_BUFFER_BIT);
    gl.drawArrays(gl.TRIANGLES, 0, points.length);
}
